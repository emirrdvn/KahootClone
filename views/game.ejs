<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Oyun - <%= lobbyId %></title>
  <link rel="stylesheet" href="/css/style.css">
</head>
<body>
  <div class="container">
    <h1>Oyun - <%= lobbyId %></h1>
    <div id="question">Soru buraya gelecek...</div>
    <div id="options"></div>
    <div id="timer">Kalan Süre: Bekleniyor...</div>
    <div id="players-scores">Oyuncular ve Skorlar: Bekleniyor...</div>
    <button id="leave-btn">Terk Et</button>
  </div>
  <script src="/socket.io/socket.io.js"></script>
  <script src="/js/client.js"></script>
  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const lobbyId = '<%= lobbyId %>';
    const username = urlParams.get('username');
    const credits = urlParams.get('credits') || 0;

    // Lobiye katıl
    console.log(`Lobiye katılıyor: ${lobbyId}, ${username}`);
    socket.emit('join_lobby', { lobbyId, username, credits });

    socket.on('connect', () => {
      console.log('Oyun ekranında Socket.IO bağlantısı kuruldu');
      // Bağlantı sonrası lobiye tekrar katıl
      socket.emit('join_lobby', { lobbyId, username, credits });
    });

    socket.on('new_round', ({ question, options, players, scores, timer }) => {
      console.log('Yeni tur alındı:', { question, options, players, scores, timer });
      try {
        document.getElementById('question').textContent = question || 'Soru yüklenemedi';
        const optionsContainer = document.getElementById('options');
        optionsContainer.innerHTML = '';
        options.forEach(option => {
          const button = document.createElement('button');
          button.textContent = option;
          button.addEventListener('click', () => {
            socket.emit('submit_guess', { lobbyId, username, guess: option });
          });
          optionsContainer.appendChild(button);
        });
        document.getElementById('players-scores').textContent = 'Oyuncular ve Skorlar: ' +
          (players ? players.map(p => `${p}: ${scores[p]}`).join(', ') : 'Veri yok');
        startTimer(timer);
      } catch (error) {
        console.error('Yeni tur işlenirken hata:', error);
      }
    });

    socket.on('round_result', ({ correctAnswer, winners }) => {
      console.log('Tur sonucu alındı:', { correctAnswer, winners });
      try {
        document.getElementById('question').textContent = `Doğru cevap: ${correctAnswer}`;
        if (winners.length > 0) {
          alert(`Kazananlar: ${winners.join(', ')}`);
        } else {
          alert('Kimse doğru cevap veremedi.');
        }
      } catch (error) {
        console.error('Tur sonucu işlenirken hata:', error);
      }
    });

    socket.on('game_over', ({ winner, scores }) => {
      console.log('Oyun bitti alındı:', { winner, scores });
      try {
        document.getElementById('question').textContent = `Oyun Bitti! Kazanan: ${winner || 'Berabere'}`;
        document.getElementById('players-scores').textContent = 'Nihai Skorlar: ' +
          Object.entries(scores).map(([p, s]) => `${p}: ${s}`).join(', ');
        document.getElementById('guess-form').style.display = 'none';
      } catch (error) {
        console.error('Oyun bitti işlenirken hata:', error);
      }
    });

    socket.on('error', ({ message }) => {
      console.log('Hata alındı:', message);
      alert(message);
    });

    document.getElementById('leave-btn').addEventListener('click', () => {
      console.log('Lobiden çıkılıyor');
      socket.emit('leave_lobby', { lobbyId, username });
      window.location.href = '/lobbies';
    });

    function startTimer(duration) {
      console.log(`Timer başlatılıyor: ${duration} saniye`);
      try {
        let timeLeft = duration;
        const timerElement = document.getElementById('timer');
        timerElement.textContent = `Kalan Süre: ${timeLeft} saniye`;
        const interval = setInterval(() => {
          timeLeft--;
          timerElement.textContent = `Kalan Süre: ${timeLeft} saniye`;
          console.log(`Timer güncellendi: ${timeLeft} saniye`);
          if (timeLeft <= 0) {
            clearInterval(interval);
            console.log('Timer bitti');
          }
        }, 1000);
      } catch (error) {
        console.error('Timer çalıştırılırken hata:', error);
      }
    }
  </script>
</body>
</html>